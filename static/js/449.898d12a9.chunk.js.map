{"version":3,"file":"static/js/449.898d12a9.chunk.js","mappings":"kJASA,MAAMA,E,OAAyBC,EAAMC,OAAO,CAC3CC,QAASC,2BACTC,QAAS,MAIVL,EAAQM,aAAaC,QAAQC,KAG3BC,GACOA,IAEPC,IACAC,QAAQC,IAAI,2BAAQF,GACbG,QAAQC,OAAOJ,MAIxBV,EAAQM,aAAaS,SAASP,KAC5BQ,IACAL,QAAQC,IAAI,sBAAaI,GACzB,MAAM,KAAEC,EAAI,QAAEC,EAAO,QAAEC,GAAYH,EAAII,KACvC,OAAa,MAATH,EACIE,EAGAN,QAAQC,OAAO,IAAIO,MAAMH,GAAoB,IACrD,IAEAR,IAAuB,IAADY,EACtBX,QAAQC,IAAI,2BAAQF,GAEpB,IAAIQ,EAAU,GACd,OAF6B,QAAjBI,EAAGZ,EAAMK,gBAAQ,IAAAO,OAAA,EAAdA,EAAgBC,QAG9B,KAAK,IACJL,EAAU,+DACV,MACD,KAAK,IACJA,EAAU,qEACV,MACD,KAAK,IACJA,EAAU,6CACV,MACD,KAAK,IACJA,EAAU,6CACV,MACD,QACCA,EAAU,2EAGZ,OAAOL,QAAQC,OAAO,IAAIO,MAAMH,GAAS,IAI3C,UC1DA,MAAMM,GAAAA,EACEC,IAAM,CAAIC,EAAajB,IACtBT,EAAQyB,IAAIC,EAAKjB,GAFpBe,EAKEG,KAAO,CACbD,EACAN,EACAX,IAEOT,EAAQ2B,KAAKD,EAAKN,EAAMX,GAV3Be,EAaEI,IAAM,CACZF,EACAN,EACAX,IAEOT,EAAQ4B,IAAIF,EAAKN,EAAMX,GAlB1Be,EAqBEK,IAAM,CAAIH,EAAajB,IACtBT,EAAQ8B,OAAOJ,EAAKjB,GAI7B,U,aClBA,MAAMsB,UAAaC,EAAAA,cAA4BC,WAAAA,GAAA,SAAAC,WAAA,KAC9CC,SAAmB,eAQnB,KAEAC,MAAQ,CACPC,MAAO,GACPnB,QAAS,cACT,CAEDoB,uBAAAA,CACCC,EACAC,GAEA,GAAID,EAAUE,MAAQC,KAAKC,MAAMF,IAChC,OAAOF,EAAUE,GAEnB,CAEAG,kBAAAA,CACCL,EACAC,EACAK,GAEAlC,QAAQC,IAAI,WAAYiC,GACpBN,EAAUE,MAAQC,KAAKC,MAAMF,KAChCC,KAAKI,SAAS,CACbT,MAAOQ,GAGV,CACAE,MAAAA,GACC,OACCC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KAAKC,MAAMF,OACfS,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KAAKC,MAAMQ,QACfD,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KAAKN,MAAMlB,WACfgC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KAAKN,MAAMC,aAInB,EAGD,SAAee,EAAAA,EAAAA,MAAKrB,GCzDdsB,EAA8BA,KACnC,MAAOC,EAAQC,GAAaC,EAAAA,SAA8B,KACnDf,EAAKgB,GAAUD,EAAAA,SAAuB,IAS7C,OAPAE,EAAAA,EAAAA,YAAU,KCRHlC,EAAKC,IAAmB,WDSlBkC,MAAM3C,IACjBL,QAAQC,IAAI,MAAOI,GACnBuC,EAAUvC,EAAI,GACb,GACA,KAGFgC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eACLC,EAAAA,EAAAA,KAACnB,EAAI,CAACoB,KAAK,qBAAMV,IAAKA,KACtBS,EAAAA,EAAAA,KAAA,UAAQU,QAASA,IAAMH,EAAOhB,EAAM,GAAGQ,SAAC,mBACnC,EAGR,GAAeG,EAAAA,EAAAA,MAAKC,E","sources":["utils/axios.ts","utils/http.ts","demo/demo02.tsx","views/Discover/SubPages/Recommend/index.tsx","apis/user/index.ts"],"sourcesContent":["// ts封装aixos\r\nimport axios from 'axios'\r\nimport type {\r\n\tAxiosInstance,\r\n\tAxiosError,\r\n\tAxiosResponse,\r\n\tInternalAxiosRequestConfig\r\n} from 'axios'\r\n\r\nconst service: AxiosInstance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_BASE_URL,\r\n\ttimeout: 5000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n\t// 对请求数据做点什么\r\n\r\n\t(config: InternalAxiosRequestConfig) => {\r\n\t\treturn config\r\n\t},\r\n\t(error: AxiosError) => {\r\n\t\tconsole.log('请求出错', error)\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n)\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n\t(res: AxiosResponse) => {\r\n\t\tconsole.log('🚀 ~ res:', res)\r\n\t\tconst { code, message, banners } = res.data\r\n\t\tif (code === 200) {\r\n\t\t\treturn banners\r\n\t\t} else {\r\n\t\t\t// TODO: 这里可以封装一个统一的提示弹窗，提示错误信息\r\n\t\t\treturn Promise.reject(new Error(message ? message : ''))\r\n\t\t}\r\n\t},\r\n\t(error: AxiosError) => {\r\n\t\tconsole.log('响应出错', error)\r\n\t\tconst status = error.response?.status\r\n\t\tlet message = ''\r\n\t\tswitch (status) {\r\n\t\t\tcase 401:\r\n\t\t\t\tmessage = '登录过期，请重新登录'\r\n\t\t\t\tbreak\r\n\t\t\tcase 403:\r\n\t\t\t\tmessage = '权限不足，请联系管理员'\r\n\t\t\t\tbreak\r\n\t\t\tcase 404:\r\n\t\t\t\tmessage = '请求地址不存在'\r\n\t\t\t\tbreak\r\n\t\t\tcase 500:\r\n\t\t\t\tmessage = '服务器内部错误'\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tmessage = '网络连接异常，请稍后再试'\r\n\t\t}\r\n\t\t// TODO: 这里可以封装一个统一的提示弹窗，提示错误信息\r\n\t\treturn Promise.reject(new Error(message))\r\n\t}\r\n)\r\n\r\nexport default service\r\n","// 封装公共的请求方法\r\n\r\nimport { AxiosRequestConfig } from 'axios'\r\nimport service from './axios'\r\n\r\nclass http {\r\n\tstatic get = <T>(url: string, config?: AxiosRequestConfig): Promise<T> => {\r\n\t\treturn service.get(url, config)\r\n\t}\r\n\r\n\tstatic post = <T>(\r\n\t\turl: string,\r\n\t\tdata?: object,\r\n\t\tconfig?: AxiosRequestConfig\r\n\t): Promise<T> => {\r\n\t\treturn service.post(url, data, config)\r\n\t}\r\n\r\n\tstatic put = <T>(\r\n\t\turl: string,\r\n\t\tdata?: object,\r\n\t\tconfig?: AxiosRequestConfig\r\n\t): Promise<T> => {\r\n\t\treturn service.put(url, data, config)\r\n\t}\r\n\r\n\tstatic del = <T>(url: string, config?: AxiosRequestConfig): Promise<T> => {\r\n\t\treturn service.delete(url, config)\r\n\t}\r\n}\r\n\r\nexport default http\r\n","import React, { memo, PureComponent } from 'react'\r\n\r\ninterface Props {\r\n\tname: string\r\n\tage: number\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\ninterface State {\r\n\tmessage: string\r\n\tcount: number\r\n}\r\n\r\nclass Demo extends PureComponent<Props, State> {\r\n\tusername: string = '道长'\r\n\t// constructor(props: Props) {\r\n\t// \tsuper(props)\r\n\r\n\t// \tthis.state = {\r\n\t// \t\tcount: 0,\r\n\t// \t\tmessage: 'hello world'\r\n\t// \t}\r\n\t// }\r\n\r\n\tstate = {\r\n\t\tcount: 10,\r\n\t\tmessage: 'hello world'\r\n\t}\r\n\r\n\tgetSnapshotBeforeUpdate(\r\n\t\tprevProps: Readonly<Props>,\r\n\t\tprevState: Readonly<State>\r\n\t) {\r\n\t\tif (prevProps.age !== this.props.age) {\r\n\t\t\treturn prevProps.age\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(\r\n\t\tprevProps: Readonly<Props>,\r\n\t\tprevState: Readonly<State>,\r\n\t\tsnapshot?: any\r\n\t): void {\r\n\t\tconsole.log('snapshot', snapshot)\r\n\t\tif (prevProps.age !== this.props.age) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcount: snapshot\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\trender(): React.ReactNode {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Demo</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{this.props.age}</p>\r\n\t\t\t\t\t<p>{this.props.name}</p>\r\n\t\t\t\t\t<p>{this.state.message}</p>\r\n\t\t\t\t\t<p>{this.state.count}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default memo(Demo)\r\n","import React, { memo, useEffect } from 'react'\r\nimport { getBanner } from '@/apis/user'\r\nimport type { IBannerType } from '@u/types'\r\nimport Demo from '@/demo/demo02'\r\ninterface IProps {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nconst Recommend: React.FC<IProps> = () => {\r\n\tconst [banner, setBanner] = React.useState<IBannerType[]>([])\r\n\tconst [age, setAge] = React.useState<number>(18)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBanner().then((res) => {\r\n\t\t\tconsole.log('rse', res)\r\n\t\t\tsetBanner(res)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>Recommend</div>\r\n\t\t\t<Demo name=\"张三丰\" age={age} />\r\n\t\t\t<button onClick={() => setAge(age + 1)}>点击</button>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default memo(Recommend)\r\n","import http from '@u/http'\r\nimport type { IBannerType } from '@u/types'\r\n\r\nexport const getBanner = () => {\r\n\treturn http.get<IBannerType[]>('/banner')\r\n}\r\n"],"names":["service","axios","create","baseURL","process","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","res","code","message","banners","data","Error","_error$response","status","http","get","url","post","put","del","delete","Demo","PureComponent","constructor","arguments","username","state","count","getSnapshotBeforeUpdate","prevProps","prevState","age","this","props","componentDidUpdate","snapshot","setState","render","_jsxs","children","_jsx","name","memo","Recommend","banner","setBanner","React","setAge","useEffect","then","onClick"],"sourceRoot":""}